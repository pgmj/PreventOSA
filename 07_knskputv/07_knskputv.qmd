---
title: "Kunskaper och utveckling"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
format: html
execute:
  echo: true
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---
```{r}
library(foreign)
library(readxl)
library(RISEkbmRasch) # devtools::install_github("pgmj/RISEkbmRasch")
library(grateful) # devtools::install_github("Pakillo/grateful")
library(ggrepel)
library(car)
library(kableExtra)
library(readxl)
library(tidyverse)
library(eRm)
library(mirt)
library(psych)
library(ggplot2)
library(psychotree)
library(matrixStats)
library(reshape)
library(knitr)
library(cowplot)
library(formattable) 
library(glue)
library(hexbin)
library(skimr)


### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

# file paths will need to have "../" added at the beginning to be able to render document

# get itemlabels
itemlabels <- read_excel("../data/Itemlabels.xlsx") %>% 
  filter(str_detect(itemnr, pattern = "ku")) %>% 
  select(!Dimension)

spssDatafil <- "../data/2023-04-26 Prevent OSA-enkat.sav"

# read SurveyMonkey data
df <- read.spss(spssDatafil, to.data.frame = TRUE) %>% 
  select(starts_with("q0011"),q0001,q0002,q0003,q0004) %>% 
  rename(Kön = q0002,
         Ålder = q0001,
         Bransch = q0003,
         Hemarbete = q0004)



# SPSS format provides itemlabels too, we can save them in a dataframe
spssLabels <- df %>% attr('variable.labels') %>% as.data.frame()

dif.kön <- df$Kön
dif.ålder <- df$Ålder
dif.bransch <- df$Bransch
dif.hemarbete <- df$Hemarbete

df <- df %>% 
  select(starts_with("q0011"))

names(df) <- itemlabels$itemnr

```

## Items

```{r}
itemlabels %>% 
  kbl_rise(width = 60)
```


## Bakgrundsdata

::: panel-tabset
### Kön
```{r}
RIdemographics(dif.kön,"Kön")
```

### Ålder
```{r}
RIdemographics(dif.ålder,"Ålder") # kanske även fixa en figur?
```

### Bransch
```{r}
RIdemographics(dif.bransch,"Bransch")
```

### Arbete hemifrån
```{r}
RIdemographics(dif.hemarbete,"Antal dagar med arbete hemifrån")
```
:::

### Svarsbortfall items

Vi filtrerar bort respondenter som har färre än två svar på frågorna i delskalan.

```{r}
# If you want to include participants with missing data, input the minimum number of items responses that a participant should have to be included in the analysis:
min.responses <- 2
scale.items <- itemlabels$itemnr

# Select the variables we will work with, and filter out respondents with a lot of missing data
df.omit.na <- df %>% 
  filter(length(scale.items)-rowSums(is.na(.[scale.items])) >= min.responses)

RImissing(df.omit.na,"ku")
```

Vi har extremt få saknade svar, och tar därför bort respondenterna som inte har kompletta svar.

```{r}
df <- read.spss(spssDatafil, to.data.frame = TRUE) %>% 
  select(starts_with("q0011"),q0001,q0002,q0003,q0004) %>% 
  rename(Kön = q0002,
         Ålder = q0001,
         Bransch = q0003,
         Hemarbete = q0004) %>% 
  na.omit()

dif.kön <- df$Kön
dif.ålder <- df$Ålder
dif.bransch <- df$Bransch
dif.hemarbete <- df$Hemarbete

df <- df %>% 
  select(starts_with("q0011"))

names(df) <- itemlabels$itemnr

df.omit.na <- df
```


### Alla svar för alla frågor

```{r}
RIallresp(df.omit.na)
```

```{r}
# koda om svarskategorier till siffror
df.omit.na <- df.omit.na %>% 
  mutate(across(everything(), ~ car::recode(.x,"'Aldrig'=0;
                                            'Sällan' =1;
                                            'Ibland'=2;
                                            'Ganska ofta'=3;
                                            'Mycket ofta'=4;
                                            'Alltid'=5",
                                            as.factor = FALSE)))
```


### Descriptives - all items

::: panel-tabset
#### Tile plot
```{r}
#| fig-height: 5
RItileplot(df.omit.na)
```
#### Stacked bars
```{r}
#| fig-height: 5
RIbarstack(df.omit.na) + ylab("Item")
```
#### Barplots
```{r}
#| layout-ncol: 2
RIbarplot(df.omit.na)
```
:::

Tills flera svar samlats in slår vi ihop de två lägsta svarskategorierna med varandra för ku1 och ku2.

```{r}
#Temporärt slå ihop svarskategorier så att analyserna funkar

df.omit.na$ku1<-recode(df.omit.na$ku1,"0=0;1=0;2=1;3=2;4=3;5=4",as.factor=FALSE)
df.omit.na$ku2<-recode(df.omit.na$ku2,"0=0;1=0;2=1;3=2;4=3;5=4",as.factor=FALSE)
#df.omit.na$ku3<-recode(df.omit.na$ku3,"0=0;1=0;2=1;3=2;4=3;5=4",as.factor=FALSE)

# df.omit.na$ku1<-recode(df.omit.na$ku1,"0=0;1=0;2=1;3=2;4=3;5=4",as.factor=FALSE)
# df.omit.na$ku2<-recode(df.omit.na$ku2,"0=0;1=0;2=1;3=2;4=3;5=4",as.factor=FALSE)
```

## Rasch-analys 1

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df.omit.na, fontsize = 13)
```

::: panel-tabset
### Item fit
```{r}
#| cache: true
RIitemfitPCM(df.omit.na, samplesize = 250, nsamples = 32)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(na.omit(df.omit.na))
```
### Residual correlations
```{r}
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### 1st contrast loadings
```{r}
RIloadLoc(df.omit.na)
```
### Analysis of response categories
```{r}
#| layout-ncol: 2
RIitemCats(df.omit.na, items = "all")
```
### Targeting
```{r}
#| fig-height: 5
# increase fig-height above as needed, if you have many items
RItargeting(df.omit.na, xlim = c(-5,5))
```
### Item hierarchy
```{r}
#| fig-height: 5
RIitemHierarchy(df.omit.na)
```
:::

Det ser ut som att frågorna täcker två olika områden, ett med nuvarande kunskaper och deras koppling till arbetet, och ett med lära mig nytt och kompetensutveckling. Det finns kraftiga residualkorrelationer mellan båda paren av items. Det finns också oordnade svarskategorier för flera items.

Eftersom vi bara har fyra items är det tveksamt att det går att hitta en sammansättning med items som fungerar adekvat med detta utgångsläge. Vi provar att ta bort ett item för att testa, och väljer ku1, samt slår samman de två lägsta svarskategorierna för ku2 och ku3.

```{r}
# create vector with eliminated items
removed_items <- c("ku1")

# select all items except those removed
df2 <- df.omit.na %>%
  select(!all_of(removed_items)) %>% 
  mutate(ku2 = recode(ku2, "1=0;2=1;3=2;4=3"),
         ku3 = recode(ku3, "1=0;2=1;3=2;4=3")
  )
```

## Rasch-analys 2

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
### Item fit
```{r}
#| cache: true
RIitemfitPCM(df2, samplesize = 250, nsamples = 32)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(na.omit(df2))
```
### Residual correlations
```{r}
RIresidcorr(df2, cutoff = 0.2)
```
### 1st contrast loadings
```{r}
RIloadLoc(df2)
```
### Analysis of response categories
```{r}
#| layout-ncol: 2
RIitemCats(df2, items = "all")
```
### Targeting
```{r}
#| fig-height: 5
# increase fig-height above as needed, if you have many items
RItargeting(df2)
```
### Item hierarchy
```{r}
#| fig-height: 5
RIitemHierarchy(df2)
```
:::

Problem med bl.a. trösklar och item fit kvarstår. Ytterligare item-exkluderingar leder till för få items.

## Rekommenderade items

```{r}
itemlabels %>% 
  filter(itemnr %in% names(df2)) %>% 
  write_csv("finalItems.csv")

itemlabels %>% 
  filter(!itemnr %in% names(df2)) %>% 
  write_csv("removedItems.csv")

itemlabels %>% 
  kbl_rise(width = 50,
           options = "hover") %>% 
  row_spec(c(1), background = "lightpink") %>% 
  footnote(general_title = "Notera: ",
           "Borttagna item markerade med färg.")

```

### Förändringar i svarskategorier
